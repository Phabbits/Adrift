<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///commands
commands = ds_list_create();
commandLifes = ds_list_create();
COMMANDLIFEMAX = 30;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///game varibales
//civilans - amount of civilans
civilians = instance_number(par_civilian);
playersAmount = ds_list_size(obj_menu.players);
//rescued - civilans rescued
rescued = 0;
//rescuedPlayers - players rescued
rescuedPlayers = 0;
//time - mission time
time = 0;
bestTime = ds_list_find_value(obj_menu.roomTimes, obj_menu.roomSelected);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///create players
    players = ds_list_create();
    statTrackers = ds_list_create();
    
    for (var i = 0; i &lt; ds_list_size(obj_menu.players); i ++) {
        //create players
        var player = instance_create(obj_playerStart.x, obj_playerStart.y, obj_player);  
        player.nickname = ds_list_find_value(obj_menu.nicknames, i);
        player.playerInput = ds_list_find_value(obj_menu.players, i)+1;
        player.class = ds_list_find_value(obj_menu.classes, i);
        player.playerId = i;
        var statTracker = instance_create(0, 0, obj_statTracker);
        statTracker.nickname = player.nickname;
        player.statTracker = statTracker;
        switch(player.class) {
            case("medic"):
                player.image_index = 0;
                break;
            case("engineer"):
                player.image_index = 1;
                break;
            case("disarmer"):
                player.image_index = 4;
                break;
            case("mechanic"):
                player.image_index = 2;
                break;
            case("marine"):
                player.image_index = 3;
                break;
            }
        ds_list_add(players, player);
        ds_list_add(statTrackers, statTracker);
        }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///align camera
scr_viewGroup(50);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///deactivate outside of view
switch (obj_menu.deactivateOutside) {
    case"All":
        instance_deactivate_all(true);
        instance_activate_region(view_xview, view_yview, view_wview, view_hview, true);
        instance_activate_object(BombControl);
        instance_activate_object(obj_menu);
        break;
    case "All but Bombs and Walls":
        instance_deactivate_all(true);
        instance_activate_region(view_xview, view_yview, view_wview, view_hview, true);
        instance_activate_object(BombControl);
        instance_activate_object(obj_menu);
        
        instance_activate_object(par_wall);
        instance_activate_object(par_missile);
        instance_activate_object(par_missileParts);
        break;
    case "None":
        break;
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///check for finish
//count up time
time ++;

//check if finish
if (instance_number(par_player) &lt;= 0) {
    //end game
    obj_menu.menu = "finish";
    obj_menu.rescuedRate = ((0.8*(rescued/civilians)) + (0.2*(rescuedPlayers/ds_list_size(obj_menu.players))))*100;
    obj_menu.time = (time/30)/60;
    if (rescuedPlayers &gt; 0) obj_menu.success = true;
    else obj_menu.success = false;
    
    //stats
    var bestFollowTheLeader = 0;
    var followTheLeader = "";
    var bestBadLeader = 0;
    var badLeader = "";
    var bestRoadTrip = 0;
    var roadTrip = "";
    var bestImRadioactive = 0;
    var imRadioactive = "";
    for (var i = 0; i &lt; ds_list_size(statTrackers); i ++) {
        var player = ds_list_find_value(statTrackers, i)
        if (player.rescued &gt; bestFollowTheLeader) {
            followTheLeader = player.nickname;
            bestFollowTheLeader = player.rescued;
            }
        if (player.followersKilled &gt; bestBadLeader) {
            badLeader = player.nickname;
            bestBadLeader = player.followersKilled;
            }
        if (player.timeDriving &gt; bestRoadTrip) {
            roadTrip = player.nickname;
            bestRoadTrip = player.timeDriving;
            }
        if (player.imRadioactive &gt; bestImRadioactive) {
            imRadioactive = player.nickname;
            bestImRadioactive = player.imRadioactive;
            }
        }
    obj_menu.followTheLeader = followTheLeader;
    obj_menu.followTheLeaderA = bestFollowTheLeader;
    obj_menu.badLeader = badLeader;
    obj_menu.badLeaderA = bestBadLeader;
    obj_menu.roadTrip = roadTrip;
    obj_menu.roadTripA = (bestRoadTrip/30)/60;
    obj_menu.imRadioactive = imRadioactive;
    obj_menu.imRadioactiveA = (bestImRadioactive/30);
    
    //goto menu room
    room_goto(mnu_blank);
    
    //save data
    with(obj_menu) {
        alarm[0] = 1;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw commands
draw_set_font(fnt_HUD);

commandListLength = ds_list_size(commands);
//draw rectangle
draw_set_colour(c_dkgray);
draw_rectangle(0, 0, 256*portScale, 16*portScale+commandListLength*22, false);
draw_set_colour(c_black);
draw_rectangle(0, 0, 256*portScale, 16*portScale+commandListLength*22, true);

draw_set_colour(c_lime);
draw_text(0, 0, "Commands:");
for (var i = 0; i &lt; commandListLength; i++) {
    var commandLife = ds_list_find_value(commandLifes, i);
    if (commandLife &gt; 0) {
        draw_text(0, 0+22+22*i, ds_list_find_value(commands, i));
        commandLife --;
        ds_list_replace(commandLifes, i, commandLife);
        }
    else {
        //delete if on for too long
        ds_list_delete(commandLifes, i);
        ds_list_delete(commands, i);
        }
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///gamemode
switch(obj_menu.gameMode) {
    case("Bomb Apocalypse"):
    case("Zombie Jackal"):
        var portWidth = display_get_gui_height()*(4/3);
        
        draw_sprite_ext(spr_timer, 0, portWidth/2-80*portScale, 0, portScale, portScale, 0, c_white, 1)
        //draw set up
        draw_set_halign(fa_center);
        draw_set_color(c_white);
        draw_set_font(fnt_HUD);
        
        //draw timer
        draw_text(portWidth/2-40*portScale+8, -3, string((time/30)/60));
        draw_text(portWidth/2+40*portScale+8, -3, string(bestTime));
        
        //reset drawing
        draw_set_halign(fa_left);
        break;
    case("Zombie Bomb Apocalypse"):
        var portWidth = display_get_gui_height()*(4/3);
        
        draw_sprite_ext(spr_timer, 1, portWidth/2-80*portScale, 0, portScale, portScale, 0, c_white, 1)
        //draw set up
        draw_set_halign(fa_center);
        draw_set_color(c_white);
        draw_set_font(fnt_HUD);
        
        //draw timer
        draw_text(portWidth/2-40*portScale+8, -3, string((time/30)/60));
        draw_text(portWidth/2+40*portScale+8, -3, string(bestTime));
        draw_text(portWidth/2+8, 30, string(round(BombControl.alarm[3]/30)));
        
        //reset drawing
        draw_set_halign(fa_left);
        break;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>332</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
