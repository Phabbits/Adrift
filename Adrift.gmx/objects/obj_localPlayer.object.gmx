<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_character</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// initialize variables

// character - character in game
character = noone;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// input

// controls - input index in controls array
controls = 0;

// inputs - array holding the current state of each input
inputs = array_create(array_length_2d(global.controls, controls));
// mouse input
mouseX = 0;
mouseY = 0;

//inputBuffer - small buffer to slow down gamepad input
inputBuffer = 0;
//inputBufferMax
inputBufferMax = 4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// get input
if (inputBuffer &lt; 0) {
    var buffer = false; // whether or not input was put in
    var cow = true;
    // get input
    switch (global.controls[controls, KEY_TYPE]) {
        case CONTROLS_KEYBOARD:
            inputs[LEFT_KEY] = scr_getKeyInput(global.controls[controls, LEFT_KEY]);
            inputs[RIGHT_KEY] = scr_getKeyInput(global.controls[controls, RIGHT_KEY]);
            inputs[UP_KEY] = scr_getKeyInput(global.controls[controls, UP_KEY]);
            inputs[DOWN_KEY] = scr_getKeyInput(global.controls[controls, DOWN_KEY]);
            inputs[ACTION_KEY] = scr_getKeyInput(global.controls[controls, ACTION_KEY]);
            inputs[ACTION2_KEY] = scr_getKeyInput(global.controls[controls, ACTION2_KEY]);
            inputs[LEFTSELC_KEY] = scr_getKeyInput(global.controls[controls, LEFTSELC_KEY]);
            inputs[RIGHTSELC_KEY] = scr_getKeyInput(global.controls[controls, RIGHTSELC_KEY]);
            // check if there was any input
            if (keyboard_check(vk_anykey))
                buffer = true;
            break;
        case CONTROLS_MOUSE:
            inputs[LEFT_KEY] = scr_getKeyInput(global.controls[controls, LEFT_KEY]);
            inputs[RIGHT_KEY] = scr_getKeyInput(global.controls[controls, RIGHT_KEY]);
            inputs[UP_KEY] = scr_getKeyInput(global.controls[controls, UP_KEY]);
            inputs[DOWN_KEY] = scr_getKeyInput(global.controls[controls, DOWN_KEY]);
            inputs[ACTION_KEY] = scr_getKeyInput(global.controls[controls, ACTION_KEY]);
            inputs[ACTION2_KEY] = scr_getKeyInput(global.controls[controls, ACTION2_KEY]);
            inputs[LEFTSELC_KEY] = scr_getMouseInput(global.controls[controls, LEFTSELC_KEY]);
            inputs[RIGHTSELC_KEY] = scr_getMouseInput(global.controls[controls, RIGHTSELC_KEY]);
            // set mouse position
            mouseX = mouse_x;
            mouseY = mouse_y;
            // check if there was any input
            if (keyboard_check(vk_anykey) || device_mouse_check_button(0, mb_any))
                buffer = true;
            break;
        default:
            // joystick input
            break;
        }
    
    // reset input buffer if in menu
    //if (global.Menu.state != STATE_GAME &amp;&amp; buffer)
    //    inputBuffer = inputBufferMax;
    }
else {
    // tick
    inputBuffer --;
    
    // reset input
    inputs[LEFT_KEY] = 0;
    inputs[RIGHT_KEY] = 0;
    inputs[UP_KEY] = 0;
    inputs[DOWN_KEY] = 0;
    inputs[ACTION_KEY] = 0;
    inputs[ACTION2_KEY] = 0;
    inputs[LEFTSELC_KEY] = 0;
    inputs[RIGHTSELC_KEY] = 0;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// create character

with(instance_create(x, y, obj_character)) {
    // set up input
    InputPlayer = other;
    inputType = global.controls[0, KEY_TYPE];
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
